package servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import core.Watch;

/**
 * Servlet implementation class CheckoutServlet
 */
public class CheckoutServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public CheckoutServlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		 String firstName = request.getParameter("firstName");
	        String lastName = request.getParameter("lastName");
	        String username = request.getParameter("username");
	        String address = request.getParameter("address");
	        String creditCard = request.getParameter("creditCard");

	        // Tạo đối tượng Order để lưu thông tin đơn hàng
	        Order order = new Order(firstName, lastName, username, address, creditCard);

	        // Lấy thông tin giỏ hàng từ session
	        HttpSession session = request.getSession();
	        ArrayList<Watch> cart = (ArrayList<Watch>) session.getAttribute("cart");

	        // Kiểm tra xem giỏ hàng có sản phẩm hay không
	        if (cart != null && !cart.isEmpty()) {
	            // Lưu thông tin giỏ hàng vào đơn hàng
	            order.setCart(cart);

	            // Thêm đơn hàng vào danh sách đơn hàng trong session
	            ArrayList<Order> orderList = (ArrayList<Order>) session.getAttribute("orderList");
	            if (orderList == null) {
	                orderList = new ArrayList<>();
	            }
	            orderList.add(order);

	            // Cập nhật session với danh sách đơn hàng mới
	            session.setAttribute("orderList", orderList);

	            // Xóa thông tin giỏ hàng sau khi thanh toán
	            session.removeAttribute("cart");

	            // Chuyển hướng đến trang xác nhận đơn hàng
	            response.sendRedirect("confirmation.jsp");
	        } else {
	            // Nếu giỏ hàng trống, chuyển hướng người dùng trở lại giỏ hàng hoặc trang chọn sản phẩm
	            response.sendRedirect("cart.jsp");
	        }
	}

}
