package servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

@MultipartConfig
/**
 * Servlet implementation class AddProduct
 */
public class AddProduct extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public AddProduct() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		String title = request.getParameter("title");
		String img = request.getParameter("image");
		System.out.println(title);
		System.out.println(img);
		Connection conn = null;
		PreparedStatement  ps = null;
		ResultSet rs = null;
		FileInputStream fis = null;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db","root","");
			File image = new File(img);
			
			ps = conn.prepareStatement("INSERT INTO `images`( `title`, `image`) VALUES (?,?)");
			ps.setString(1, title);
			fis = new FileInputStream(image);
			ps.setBinaryStream(2,(InputStream) fis,(int)(image.length()));
			int count = ps.executeUpdate();
			if(count >0) {
				System.out.println("successsfully");
			}
			else {
				System.out.println("Fails");
			}
		} catch (Exception e) {
			// TODO: handle exception
		}
		finally {
			try {
				if(rs != null) {
					rs.close();
					rs = null;
				}
				if (ps != null) {
					ps.close();
					ps = null;
				}
				if (conn != null) {
					conn.close();
					conn =null;
				}
			} catch (Exception e2) {
				// TODO: handle exception
			}
		}
	}
	

}
