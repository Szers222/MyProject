package servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import core.Category;
import core.Watch;
import dao.WatchDAO;

/**
 * Servlet implementation class CartServlet
 */
public class CartServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public CartServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.getWriter().append("Served at: ").append(request.getContextPath());

        String id = request.getParameter("id");
        String action = request.getParameter("action");
        System.out.println(action);
        int xid = Integer.parseInt(id);

        HttpSession session = request.getSession();
        ArrayList<Watch> cart = (ArrayList<Watch>) session.getAttribute("cart");

        if (cart == null) {
            cart = new ArrayList<>();
            session.setAttribute("cart", cart);
        }

        Watch watch = WatchDAO.getProductById(xid);

        if (watch != null) {
            if (action != null && action.equals("remove")) {
                // Kiểm tra xem sản phẩm có trong giỏ hàng không
                Iterator<Watch> iterator = cart.iterator();
                while (iterator.hasNext()) {
                    Watch cartWatch = iterator.next();
                    if (cartWatch.getWatchId() == xid) {
                        iterator.remove();
                        break;
                    }
                }
            } else {
                // Thêm sản phẩm vào giỏ hàng nếu action không phải là "remove"
                cart.add(watch);
            }

            // Đặt danh sách watch trong yêu cầu để sử dụng trong JSP
            session.setAttribute("watchList", cart);
        }

        response.sendRedirect("cart.jsp");
        
    }
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
